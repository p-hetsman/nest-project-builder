import { NestFactory } from '@nestjs/core';
import { Logger<%= nestjsCommonImport %> } from '@nestjs/common';
import * as cookieParser from 'cookie-parser';
<%if (authOpenid) { %>
  import * as session from 'express-session';
<% } %>

import { AppModule } from './app.module';

<% imports.forEach(imports => { -%>
<%- imports %>
<% }) -%>

const PORT = 8081;

async function bootstrap() {
  const app = await NestFactory.create(AppModule, {
<% nestFactoryOptions.forEach(nestFactoryOption => { -%>
    <%- nestFactoryOption.key %>: <%- nestFactoryOption.value %>,
<% }); -%>
  });

<% globalPipes.forEach(globalPipe => { -%>
  <%- globalPipe %>
<% }) -%>

<% globalFilters.forEach(globalFilter => { -%>
  <%- globalFilter %>
<% }) -%>

<% globalOptionsConfig.forEach(globalOption => { -%>
  <%- globalOption %>
<% }) -%>

<%if (authOpenid) { %>
  app.use(
    session({
      secret: '< secret >',
      resave: false,
      saveUninitialized: false,
    }),
  );
<% } %>

  app.use(cookieParser());

  await app.listen(PORT);
  Logger.log(`Server listening at ${PORT}`, 'main');
}

bootstrap();
