import { Module } from '@nestjs/common';
import { JwtModule } from '@nestjs/jwt';
import { PassportModule } from '@nestjs/passport';

import { AuthController } from './auth.controller';
import { AuthService } from './auth.service';
import { UsersModule } from '../users/users.module';
import { jwtConstants } from './constants';
import { JwtStrategy } from './strategies/jwt.strategy';
import { RefreshTokenStrategy } from './strategies/refresh-token.strategy';

<%if (authGoogle) { %>
  import { GoogleStrategy } from './strategies/google.strategy';
<% } %>
<%if (authFacebook) { %>
  import { FacebookStrategy } from './strategies/facebook.strategy'; 
<% } %>
<%if (authOpenid) { %>
  import {
    OpenidStrategy,
    buildOpenIdClient,
  } from './strategies/openid.strategy';
<% } %>

<%if (authOpenid) { %>
  const OpenidStrategyFactory = {
    provide: 'OpenidStrategy',
    useFactory: async (authService: AuthService) => {
      const client = await buildOpenIdClient();
      return new OpenidStrategy(client, authService);
    },
    inject: [AuthService],
  };
<% } %>

@Module({
  imports: [
    UsersModule,
    PassportModule.register({ defaultStrategy: 'jwt', session: <%- authOpenid %>}),
    JwtModule.register({
      secret: jwtConstants.secret,
      signOptions: { expiresIn: '300s' },
    }),
  ],
  controllers: [AuthController],
  providers: [
    AuthService, 
    JwtStrategy, 
    RefreshTokenStrategy,
    <%if (authGoogle) { %>
      GoogleStrategy,
    <% } %>
    <%if (authFacebook) { %>
      FacebookStrategy,
    <% } %>
    <%if (authOpenid) { %>
      OpenidStrategyFactory,
    <% } %>
  ],
  exports: [AuthService],
})
export class AuthModule {}
